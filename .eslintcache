[{"C:\\Users\\USER\\React\\social-media-client\\src\\redux\\actions.js":"1","C:\\Users\\USER\\React\\social-media-client\\src\\components\\nav-footer\\nav-footer.jsx":"2","C:\\Users\\USER\\React\\social-media-client\\src\\redux\\store.js":"3","C:\\Users\\USER\\React\\social-media-client\\src\\redux\\reducers.js":"4","C:\\Users\\USER\\React\\social-media-client\\src\\index.js":"5","C:\\Users\\USER\\React\\social-media-client\\src\\utils\\index.js":"6","C:\\Users\\USER\\React\\social-media-client\\src\\containers\\memberlist\\member-list.jsx":"7","C:\\Users\\USER\\React\\social-media-client\\src\\containers\\message\\message.jsx":"8","C:\\Users\\USER\\React\\social-media-client\\src\\containers\\friends\\friends.jsx":"9","C:\\Users\\USER\\React\\social-media-client\\src\\containers\\chat\\chat.jsx":"10","C:\\Users\\USER\\React\\social-media-client\\src\\containers\\main\\main.jsx":"11","C:\\Users\\USER\\React\\social-media-client\\src\\containers\\personal\\personal.jsx":"12","C:\\Users\\USER\\React\\social-media-client\\src\\components\\user-list\\user-list.jsx":"13","C:\\Users\\USER\\React\\social-media-client\\src\\components\\friend-list\\friend-list.jsx":"14","C:\\Users\\USER\\React\\social-media-client\\src\\containers\\profile\\profile.jsx":"15","C:\\Users\\USER\\React\\social-media-client\\src\\components\\not-found\\not-found.jsx":"16","C:\\Users\\USER\\React\\social-media-client\\src\\components\\profile-detail\\profile-detail.jsx":"17","C:\\Users\\USER\\React\\social-media-client\\src\\redux\\action-types.js":"18","C:\\Users\\USER\\React\\social-media-client\\src\\containers\\register\\register.jsx":"19"},{"size":9724,"mtime":1609574267198,"results":"20","hashOfConfig":"21"},{"size":4020,"mtime":1609562328466,"results":"22","hashOfConfig":"21"},{"size":201,"mtime":1606406171794,"results":"23","hashOfConfig":"21"},{"size":4508,"mtime":1609574397743,"results":"24","hashOfConfig":"21"},{"size":782,"mtime":1607007148080,"results":"25","hashOfConfig":"21"},{"size":752,"mtime":1609569032293,"results":"26","hashOfConfig":"21"},{"size":745,"mtime":1608474053710,"results":"27","hashOfConfig":"21"},{"size":5772,"mtime":1609561061883,"results":"28","hashOfConfig":"21"},{"size":887,"mtime":1608473329957,"results":"29","hashOfConfig":"21"},{"size":11257,"mtime":1609560798779,"results":"30","hashOfConfig":"21"},{"size":6584,"mtime":1609576893719,"results":"31","hashOfConfig":"21"},{"size":6225,"mtime":1609573785255,"results":"32","hashOfConfig":"21"},{"size":4884,"mtime":1609576568422,"results":"33","hashOfConfig":"21"},{"size":5991,"mtime":1609576628804,"results":"34","hashOfConfig":"21"},{"size":1536,"mtime":1609572183961,"results":"35","hashOfConfig":"21"},{"size":833,"mtime":1609575731948,"results":"36","hashOfConfig":"21"},{"size":4887,"mtime":1609575993776,"results":"37","hashOfConfig":"21"},{"size":573,"mtime":1609574147566,"results":"38","hashOfConfig":"21"},{"size":4442,"mtime":1606559280522,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"m51rdt",{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\USER\\React\\social-media-client\\src\\redux\\actions.js",[],"C:\\Users\\USER\\React\\social-media-client\\src\\components\\nav-footer\\nav-footer.jsx",["84"],"C:\\Users\\USER\\React\\social-media-client\\src\\redux\\store.js",[],["85","86"],"C:\\Users\\USER\\React\\social-media-client\\src\\redux\\reducers.js",["87","88"],"C:\\Users\\USER\\React\\social-media-client\\src\\index.js",[],["89","90"],"C:\\Users\\USER\\React\\social-media-client\\src\\utils\\index.js",[],"C:\\Users\\USER\\React\\social-media-client\\src\\containers\\memberlist\\member-list.jsx",[],"C:\\Users\\USER\\React\\social-media-client\\src\\containers\\message\\message.jsx",[],"C:\\Users\\USER\\React\\social-media-client\\src\\containers\\friends\\friends.jsx",[],["91","92"],"C:\\Users\\USER\\React\\social-media-client\\src\\containers\\chat\\chat.jsx",["93"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { connectToHub, getMsg } from '../../redux/actions';\r\nimport { getCookies } from '../../utils/index';\r\n\r\nimport '../personal/personal.scss';\r\nimport man from '../../assets/man.png';\r\nimport woman from '../../assets/woman2.png';\r\nimport '../personal/personal.scss';\r\n\r\nclass Chat extends Component {\r\n\r\n    state = {\r\n        msg: \"\",\r\n        unread: 0,\r\n        msgs: [\r\n            {\r\n                memberid: 0,\r\n                text: \"\",\r\n                gender: \"\",\r\n                username: \"\",\r\n            }\r\n        ],\r\n        //HubConnection: null,\r\n    }\r\n\r\n\r\n    //自定義的資料存放\r\n    initData = {}\r\n    //初始化資料\r\n    initPassData = () => {\r\n        const path = this.props.location.pathname;\r\n        const pathAr = path.split(\"/\");\r\n        const names = pathAr[2].split(\"+\");\r\n        const userid = getCookies();\r\n        return {\r\n            memberid: userid,\r\n            recieveid: names[1],\r\n        }\r\n    }\r\n\r\n    handleInput = (e) => {\r\n        this.setState({ msg: e.target.value })\r\n    }\r\n\r\n    handleEnter = (e) => {\r\n        //enter也能輸入訊息\r\n        if (e.nativeEvent.keyCode === 13) {\r\n            this.sendMsg();\r\n        }\r\n    }\r\n\r\n    //發送訊息\r\n    sendMsg = () => {\r\n        //取得userid 跟 recieveid\r\n        const { memberid, recieveid } = this.initData;\r\n        const msg = this.state.msg;\r\n\r\n        //激發 chathub 裡面的方法名\r\n        this.props.hubConnection\r\n            .invoke(\"SendBothMsg\", memberid, recieveid, msg)\r\n            .catch(err => console.log(err));\r\n\r\n        //消除輸入框\r\n        this.inputval = \"\";\r\n        this.setState({ msg: \"\" });\r\n\r\n\r\n\r\n    }\r\n\r\n    //進入聊天室\r\n    IntoChat = () => {\r\n\r\n        const path = this.props.location.pathname;\r\n        const pathAr = path.split(\"/\");\r\n        const names = pathAr[2].split(\"+\");\r\n        console.log(\"聊天名\", names);\r\n        //把自己的memberid 根聊天對象的id 傳到後端，用來存放connectionid\r\n        this.state.HubConnection.invoke(\"AddConnectList\", names[0], names[1])\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    async componentDidMount() {\r\n        //創建一個實例\r\n        // const HubConnection = new HubConnectionBuilder()\r\n        //     .withUrl(`${process.env.REACT_APP_URL}/chathub`).withAutomaticReconnect().build();\r\n\r\n        // const name = \"hank\";\r\n        //連線\r\n        // this.setState({ name, HubConnection }, () => {\r\n\r\n        //     this.state.HubConnection.start()\r\n        //         .then(() => console.log(\"連線成功\"))\r\n        //         .then(() => this.IntoChat())\r\n        //         .catch(err => console.log(\"連線失敗\", err));\r\n        //     //監聽 chathub 裡面的await Clients.All.SendAsync(\"RecieveMsg\", content);\r\n        //     // 下面(content) 是結果，要跟chathub定義的參數數量一樣\r\n        //     this.state.HubConnection.on(\"SendBothMsg\", (user, reciever, input) => {\r\n\r\n\r\n        //         //判斷是哪個用戶說的\r\n        //         const memberid = user.memberid;\r\n        //         const text = input;\r\n\r\n        //         //如果第一次傳訊息就覆蓋過去\r\n        //         const firstmsg =this.state.msgs\r\n        //         // if(firstmsg[0].memberid===0){\r\n        //         //     this.setState({ msgs:[{...user,text}] });\r\n        //         // }\r\n\r\n        //         //把講過的話組合成陣列\r\n        //         const msgs = this.state.msgs.concat([{...user,text}]);\r\n        //         //刷新讓他渲染\r\n        //         this.setState({ msgs });\r\n        //     })\r\n        //     //測試\r\n        //     // this.state.HubConnection.on(\"IntoChat\", (content) => {\r\n        //     //     const text = content;\r\n        //     //     //把講過的話組合成陣列\r\n        //     //     const msgs = this.state.msgs.concat([text]);\r\n        //     //     //刷新讓他渲染\r\n        //     //     this.setState({ msgs });\r\n        //     // })\r\n\r\n\r\n\r\n        // });\r\n        // const path = this.props.location.pathname;\r\n        // const pathAr = path.split(\"/\");\r\n        // const names = pathAr[2].split(\"+\");\r\n        // if(!this.props.HubConnection){\r\n        //     await this.props.connectToHub(names[0])\r\n        // }\r\n\r\n        //初始化資料\r\n        const data = this.initPassData();\r\n        this.initData = { ...data };\r\n        const { memberid, recieveid } = this.initData;\r\n\r\n        //撈資料前先把後端資料庫的數據改成read\r\n        this.props.hubConnection.invoke(\"ReadMsg\", memberid, recieveid)\r\n            .catch(err => console.log(err));\r\n\r\n        //如果還沒有撈資料過\r\n        if (this.state.msgs[0].memberid === 0 || this.state.msg.length < 1) {\r\n            await this.props.getMsg({ memberid, recieveid })\r\n            const msgs = this.props.msgs;\r\n            this.setState({ msgs });\r\n        }\r\n\r\n        console.log(\"有這個實體嗎\", this.props);\r\n\r\n\r\n\r\n        this.props.hubConnection.on(\"SendBothMsg\", (user, reciever, input) => {\r\n\r\n            console.log(\"有接收到嗎\", user, input);\r\n            //判斷是哪個用戶說的\r\n            const memberid = user.memberid;\r\n            const text = input;\r\n\r\n            //如果第一次傳訊息就覆蓋過去\r\n            // const firstmsg = this.state.msgs\r\n            // if (firstmsg[0].memberid === 0) {\r\n            //     this.setState({ msgs: [] });\r\n            // }\r\n\r\n            //把講過的話組合成陣列\r\n            const msgs = this.state.msgs.concat([{ ...user, text }]);\r\n            //刷新讓他渲染\r\n            this.setState({ msgs });\r\n        })\r\n\r\n    }\r\n\r\n    //組件銷毀時要做的事 (生命週期)\r\n    componentWillUnmount() {\r\n        const initmsg = {\r\n            memberid: 0,\r\n            text: \"\",\r\n            gender: \"\",\r\n            username: \"\",\r\n        }\r\n        //讓state 回到一開始的狀態，下次進入會再去後台撈msg資料\r\n        this.setState({ msgs: [initmsg] })\r\n    }\r\n\r\n    render() {\r\n\r\n        //擷取用戶名\r\n        const { memberid } = this.initPassData();\r\n\r\n        //過濾到初始值\r\n        const msgs = this.state.msgs.filter(i => i.memberid !== 0);\r\n        console.log(\"輸入的訊息\", this.state.msg);\r\n        console.log(\"現在的訊息狀態\", msgs)\r\n\r\n        return (\r\n            <div className=\"mybody\" >\r\n                <div className=\"outborder topborder\" >\r\n                    <div className=\"container mt-3 mcbd\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"card col-7 my-2 chatbox\">\r\n                                <div className=\"mt-2\">\r\n\r\n                                    <div className=\"headerdp\">\r\n\r\n                                        <div className=\"\">\r\n                                            <img className=\"mx-3 headphoto\" src={woman} style={{ \"width\": 50 }} alt=\"\" />\r\n                                            <div className=\"headerdp chnsz\" style={{ \"verticalAlign\": \"top\" }}>台北張阿姨</div>\r\n\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\" ctmsg ctmsgsf px-2\">寶貝今晚來陪我啊 </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"card col-7 my-2 chatbox\">\r\n                                <div className=\"mt-2\">\r\n\r\n                                    <div className=\"headerdp\">\r\n\r\n                                        <div className=\"\">\r\n                                            <img className=\"mx-3 headphoto  float-right\" src={man} style={{ \"width\": 50 }} alt=\"\" />\r\n\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\" float-right mt-5 ctmsg px-2\" >閉嘴低能兒 </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            {/*訊息內容 */}\r\n                            {\r\n                                msgs.map((m, index) => (\r\n                                    m.memberid === parseInt(memberid) ?\r\n                                        <div className=\"card col-7 my-2 chatbox\" key={index}>\r\n                                            <div className=\"mt-2\">\r\n\r\n                                                <div className=\"headerdp\">\r\n                                                    {/*大頭貼*/}\r\n                                                    <div className=\"\">\r\n                                                        <img className=\"mx-3 headphoto  float-right\" src={m.gender === \"男\" ? man : woman} style={{ \"width\": 50 }} alt=\"\" />\r\n                                                    </div>\r\n\r\n                                                    <div className=\" float-right mt-5 ctmsg px-2\" >{m.text} </div>\r\n\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                        :\r\n                                        <div className=\"card col-7 my-2 chatbox\" key={index}>\r\n                                            <div className=\"mt-2\">\r\n\r\n                                                <div className=\"headerdp\">\r\n\r\n                                                    <div className=\"\">\r\n                                                        <img className=\"mx-3 headphoto\" src={m.gender === \"男\" ? man : woman} style={{ \"width\": 50 }} alt=\"\" />\r\n                                                        <div className=\"headerdp chnsz\" style={{ \"verticalAlign\": \"top\" }}>{m.username}</div>\r\n\r\n                                                    </div>\r\n\r\n                                                    <div className=\" ctmsg ctmsgsf px-2\">{m.text} </div>\r\n\r\n\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                ))\r\n                            }\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    {/*輸入框*/}\r\n                    <nav className=\"nav fixed-bottom mb-3\" role=\"navigation\">\r\n                        <div className=\"container justify-content-center\">\r\n                            <div className=\"row justify-content-center\">\r\n                                <input className=\"ipsz\" type=\"text\" value={this.state.msg} onChange={this.handleInput} ref={inputval => this.inputval = inputval} onKeyPress={this.handleEnter} />\r\n                                <button className=\"btn btn-secondary\" onClick={this.sendMsg}>送出</button>\r\n                            </div>\r\n                        </div>\r\n                    </nav>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({ hubConnection: state.hubConnection, msgs: state.msgs }),\r\n    { connectToHub, getMsg }\r\n)(Chat);","C:\\Users\\USER\\React\\social-media-client\\src\\containers\\main\\main.jsx",["94","95","96"],"C:\\Users\\USER\\React\\social-media-client\\src\\containers\\personal\\personal.jsx",["97","98","99"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getCookies } from '../../utils/index';\r\nimport { getPersonal, getSelectOption,logout } from '../../redux/actions';\r\n\r\nimport './personal.scss';\r\nimport man from '../../assets/man.png';\r\nimport woman from '../../assets/woman2.png';\r\nimport { string } from 'prop-types';\r\nclass Personal extends Component {\r\n\r\n    state = {\r\n        job: \"\",\r\n        username: \"\",\r\n        nickname: \"\",\r\n        state: \"\",\r\n        preferType: [],\r\n        interest: [],\r\n        introduce: \"\",\r\n        getdata:false,\r\n        getOption: false,\r\n    }\r\n\r\n    //暫時用不到的上船大頭貼\r\n    uploadPhoto = (e) => {\r\n        console.log(e.target.value);\r\n        console.log(this.refs.file.files);\r\n    }\r\n\r\n    //這邊好像怪怪的 這邊用 promise 在跑完ajax 後 才從user取值\r\n    async componentDidMount() {\r\n        const memberid =getCookies();\r\n        if(!this.state.getdata){\r\n            await this.props.getPersonal({memberid});\r\n            //這個的權重好像會比 ajax前面\r\n            //應該是說他是開另外一個線去跑ajax\r\n            const { username,nickname,job, state, introduce } = this.props.user;\r\n            //console.log(\"個人訊息P\",this.props.user);\r\n            this.setState({ username,nickname,job, state, introduce ,getdata:true});\r\n        }\r\n\r\n        if(!this.state.getOption){\r\n            this.props.getSelectOption();\r\n            this.setState({getOption:true});\r\n        }\r\n        \r\n    }\r\n\r\n    //蒐集數據\r\n    handleInput = (name, event) => {\r\n        const val = event.target.value;\r\n        //取到要儲存的陣列\r\n        let checkarr = this.state[name]; //取道屬性的值\r\n        //console.log(\"string屬性\",typeof (String)); //fuction 有夠低能\r\n        console.log(\"這是什麼\",{[name]:val});\r\n\r\n        if (typeof (checkarr) !== \"string\") {\r\n            if(!checkarr.find(i =>i===val)){\r\n                checkarr.push(val);\r\n            }\r\n            \r\n            console.log(\"是陣列嗎\",checkarr);\r\n            this.setState({ [name]: checkarr });\r\n            return;\r\n        }\r\n        this.setState({ [name]: val });\r\n    }\r\n\r\n    //儲存資料\r\n    updateUser = ()=>{\r\n        console.log(\"儲存資料\");\r\n    }\r\n\r\n    //登出\r\n    logout = ()=>{\r\n        this.props.logout();\r\n        this.props.history.replace('/login');\r\n        console.log(\"登出\");\r\n    }\r\n\r\n\r\n    render() {\r\n        const {username,nickname,state,introduce} = this.state;\r\n        const { selectOption, user } = this.props;\r\n\r\n        return (\r\n            <div className=\"mybody\">\r\n                <div className=\"outborder topborder\">\r\n                    <div className=\"container mt-3\">\r\n                        <div className=\"row justify-content-center\">\r\n\r\n                            <img className=\"mx-3 headphoto\" src={woman} style={{ \"width\": 100 }} alt=\"\" />\r\n\r\n\r\n                            <div className=\"col-xs align-self-center\">\r\n                                <h5>{user.username}</h5>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <p></p>\r\n                    <div className=\"container mt-10\">\r\n                        <div className=\"row justify-content-center \">\r\n\r\n                            <form className=\"col-6 col-md-4\">\r\n                                <aside>姓名</aside>\r\n                                <input className=\"form-control my-1\" type=\"text\" placeholder=\"請輸入姓名\" onChange={e => { this.handleInput(\"nickname\", e) }} value={nickname}/>\r\n                                <p></p>\r\n\r\n\r\n                                <aside>狀態</aside>\r\n                                <input className=\"form-control my-1\" type=\"text\" placeholder=\"狀態\" onChange={e => { this.handleInput(\"state\", e) }} value={state}/>\r\n                                <p></p>\r\n                                <aside>興趣\r\n                                    <select className=\"my-1 ml-2\" name=\"\" id=\"\"  onChange={e => { this.handleInput(\"interest\", e) }}>\r\n                                        <option disabled value=\"\">請選擇</option>\r\n                                        {selectOption.interests.map( (item,index)=><option value={item} key={index}>{item}</option> )}\r\n                                    </select>\r\n                                </aside>\r\n                                <input className=\"form-control my-1\" type=\"text\" placeholder=\"興趣\" />\r\n\r\n                                <p></p>\r\n\r\n                                <aside>偏好類型\r\n                                    <select className=\"my-1 ml-2\" name=\"\" id=\"\" onChange={e => { this.handleInput(\"interest\", e) }}>\r\n                                        <option disabled value=\"\">請選擇</option>\r\n                                        {selectOption.preferTypes.map( (item,index)=><option value={item} key={index}>{item}</option> )}\r\n                                    </select>\r\n                                </aside>\r\n                                <input className=\"form-control my-1\" type=\"text\" placeholder=\"偏好類型\" />\r\n\r\n                                <p></p>\r\n                                <aside>個人簡介</aside>\r\n                                <textarea className=\"form-control my-1\" name=\"\" id=\"\" cols=\"25\" rows=\"3\" onChange={e => { this.handleInput(\"introduce\", e) }} value={introduce}/>\r\n                                <p></p>\r\n                                <div className=\"col\">\r\n                                    <button className=\"btn btn-primary my-1 mb-5\" onClick={this.updateUser}>保存</button>\r\n                                    <button className=\"btn btn-outline-success my-1 mb-5 float-right\" onClick={this.logout}>退出登入</button>\r\n\r\n                                </div>\r\n\r\n\r\n                            </form>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({ user: state.user, selectOption: state.selectOption }),\r\n    { getPersonal, getSelectOption,logout }\r\n)(Personal);","C:\\Users\\USER\\React\\social-media-client\\src\\components\\user-list\\user-list.jsx",[],"C:\\Users\\USER\\React\\social-media-client\\src\\components\\friend-list\\friend-list.jsx",[],"C:\\Users\\USER\\React\\social-media-client\\src\\containers\\profile\\profile.jsx",["100","101","102"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { getCookies } from '../../utils/index';\r\nimport { getUserDetail, addFriend, delFriend } from '../../redux/actions';\r\nimport ProfileDetail from '../../components/profile-detail/profile-detail';\r\n\r\nimport '../personal/personal.scss';\r\nimport man from '../../assets/man.png';\r\nimport woman from '../../assets/woman2.png';\r\n\r\nclass MyProfile extends Component {\r\n\r\n\r\n    addFriend = ({ memberid, friendid }) => {\r\n        this.props.addFriend({ memberid, friendid });\r\n    }\r\n\r\n    delFriend = ({ memberid, friendid }) => {\r\n\r\n        this.props.delFriend({ memberid, friendid });\r\n    }\r\n\r\n    componentDidMount() {\r\n        //擷取要抓的用戶名\r\n        const memberid = getCookies();\r\n        const path = this.props.location.pathname;\r\n        const routeparam = path.split(\"/\");\r\n        console.log(\"用戶資料\", routeparam);\r\n        this.props.getUserDetail({ memberid, username: routeparam[2] });\r\n    }\r\n\r\n    // goChat = (userid = 1) => {\r\n        \r\n    //     this.props.history.push(`/chat/${userid}`)\r\n    // }\r\n\r\n    render() {\r\n\r\n        //const userInfo = this.props.user;\r\n        \r\n\r\n        return (\r\n            <ProfileDetail userInfo={this.props.uerDetail} addFriend={this.addFriend} delFriend={this.delFriend} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({ uerDetail: state.uerDetail }),\r\n    { getUserDetail, addFriend, delFriend }\r\n)(MyProfile);","C:\\Users\\USER\\React\\social-media-client\\src\\components\\not-found\\not-found.jsx",[],"C:\\Users\\USER\\React\\social-media-client\\src\\components\\profile-detail\\profile-detail.jsx",[],"C:\\Users\\USER\\React\\social-media-client\\src\\redux\\action-types.js",[],"C:\\Users\\USER\\React\\social-media-client\\src\\containers\\register\\register.jsx",["103"],{"ruleId":"104","severity":1,"message":"105","line":105,"column":37,"nodeType":"106","endLine":105,"endColumn":172},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":5,"column":10,"nodeType":"113","messageId":"114","endLine":5,"endColumn":14},{"ruleId":"111","severity":1,"message":"115","line":21,"column":21,"nodeType":"113","messageId":"114","endLine":21,"endColumn":27},{"ruleId":"107","replacedBy":"116"},{"ruleId":"109","replacedBy":"117"},{"ruleId":"107","replacedBy":"118"},{"ruleId":"109","replacedBy":"119"},{"ruleId":"111","severity":1,"message":"120","line":161,"column":19,"nodeType":"113","messageId":"114","endLine":161,"endColumn":27},{"ruleId":"111","severity":1,"message":"121","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":18},{"ruleId":"111","severity":1,"message":"122","line":15,"column":21,"nodeType":"113","messageId":"114","endLine":15,"endColumn":34},{"ruleId":"104","severity":1,"message":"123","line":176,"column":21,"nodeType":"106","endLine":176,"endColumn":50},{"ruleId":"111","severity":1,"message":"124","line":8,"column":8,"nodeType":"113","messageId":"114","endLine":8,"endColumn":11},{"ruleId":"111","severity":1,"message":"125","line":10,"column":10,"nodeType":"113","messageId":"114","endLine":10,"endColumn":16},{"ruleId":"111","severity":1,"message":"126","line":84,"column":16,"nodeType":"113","messageId":"114","endLine":84,"endColumn":24},{"ruleId":"111","severity":1,"message":"127","line":3,"column":10,"nodeType":"113","messageId":"114","endLine":3,"endColumn":18},{"ruleId":"111","severity":1,"message":"124","line":10,"column":8,"nodeType":"113","messageId":"114","endLine":10,"endColumn":11},{"ruleId":"111","severity":1,"message":"128","line":11,"column":8,"nodeType":"113","messageId":"114","endLine":11,"endColumn":13},{"ruleId":"104","severity":1,"message":"123","line":55,"column":21,"nodeType":"106","endLine":55,"endColumn":50},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'func' is defined but never used.","Identifier","unusedVar","'gender' is assigned a value but never used.",["129"],["130"],["129"],["130"],"'memberid' is assigned a value but never used.","'MemberInfo' is defined but never used.","'getRedirectTo' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'man' is defined but never used.","'string' is defined but never used.","'username' is assigned a value but never used.","'Redirect' is defined but never used.","'woman' is defined but never used.","no-global-assign","no-unsafe-negation"]