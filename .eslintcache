[{"C:\\Users\\USER\\React\\social-media-client\\src\\redux\\actions.js":"1","C:\\Users\\USER\\React\\social-media-client\\src\\redux\\store.js":"2","C:\\Users\\USER\\React\\social-media-client\\src\\redux\\reducers.js":"3","C:\\Users\\USER\\React\\social-media-client\\src\\containers\\chat\\chat.jsx":"4","C:\\Users\\USER\\React\\social-media-client\\src\\index.js":"5","C:\\Users\\USER\\React\\social-media-client\\src\\containers\\memberlist\\member-list.jsx":"6","C:\\Users\\USER\\React\\social-media-client\\src\\containers\\message\\message.jsx":"7","C:\\Users\\USER\\React\\social-media-client\\src\\containers\\friends\\friends.jsx":"8","C:\\Users\\USER\\React\\social-media-client\\src\\components\\friend-list\\friend-list.jsx":"9","C:\\Users\\USER\\React\\social-media-client\\src\\api\\hubHelper.js":"10","C:\\Users\\USER\\React\\social-media-client\\src\\api\\index.js":"11","C:\\Users\\USER\\React\\social-media-client\\src\\redux\\action-types.js":"12","C:\\Users\\USER\\React\\social-media-client\\src\\utils\\index.js":"13"},{"size":8377,"mtime":1609078125987,"results":"14","hashOfConfig":"15"},{"size":201,"mtime":1606406171794,"results":"16","hashOfConfig":"15"},{"size":3182,"mtime":1609077825484,"results":"17","hashOfConfig":"15"},{"size":10973,"mtime":1609085236882,"results":"18","hashOfConfig":"15"},{"size":782,"mtime":1607007148080,"results":"19","hashOfConfig":"15"},{"size":745,"mtime":1608474053710,"results":"20","hashOfConfig":"15"},{"size":3252,"mtime":1608448187817,"results":"21","hashOfConfig":"15"},{"size":887,"mtime":1608473329957,"results":"22","hashOfConfig":"15"},{"size":5721,"mtime":1608729012458,"results":"23","hashOfConfig":"15"},{"size":926,"mtime":1609046839219,"results":"24","hashOfConfig":"15"},{"size":1543,"mtime":1609076538692,"results":"25","hashOfConfig":"15"},{"size":398,"mtime":1609076802742,"results":"26","hashOfConfig":"15"},{"size":537,"mtime":1609085170617,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"m51rdt",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\USER\\React\\social-media-client\\src\\redux\\actions.js",["59"],"import { reqRegister, reqLogin, reqUpdateUser, reqUser, reqPersonal, reqUserDetail, reqSelectOption, reqFriend, reqAddFriend, reqDeleteFriend,reqMessage } from '../api/index';\r\nimport { SUCCESS_CODE } from '../api/respcode';\r\nimport { AUTH_SUCCESS, ERR_MSG, RECIEVE_USER, RESET_USER, RECIEVE_OPTIONS, RECIEVE_USERS, CONNECT_SUCCESS,RECIEVE_MSG } from './action-types';\r\n\r\nimport { connectHub } from '../api/hubHelper';\r\n\r\nimport Cookies from 'js-cookie';\r\n\r\nimport { HubConnectionBuilder } from '@microsoft/signalr';\r\n\r\n//同步 (要分發的action)\r\nconst authSucess = (user) => ({ type: AUTH_SUCCESS, data: user });\r\nconst errorMsg = (msg) => ({ type: ERR_MSG, data: msg });\r\n\r\nconst recieveUser = (user) => ({ type: RECIEVE_USER, data: user });\r\nconst resetUser = (msg) => ({ type: RESET_USER, data: msg });\r\n\r\nconst recieveUsers = (user) => ({ type: RECIEVE_USERS, data: user });\r\n\r\nconst recieveOptions = (options) => ({ type: RECIEVE_OPTIONS, data: options });\r\n\r\n//chathub 連線\r\nconst recieveConnectHub = (hubConnection) => ({ type: CONNECT_SUCCESS, data: hubConnection });\r\n\r\n//獲取訊息\r\nconst recieveMsg =(data)=>({type: RECIEVE_MSG,data:data});\r\n\r\n//http://localhost:56825/register\r\n\r\n//異步\r\nexport const register = (user) => {\r\n\r\n    const { username, password, confirm } = user;\r\n    //前端驗證輸入資料是否正確\r\n    if (!username) {\r\n        return errorMsg(\"用戶名不得為空\")\r\n    } else if (password !== confirm) {\r\n        //異步的才需要dispatch\r\n        return errorMsg(\"2次密碼不一致\")\r\n    }\r\n\r\n\r\n    //表單數據合法\r\n    return async (dispatch) => {\r\n        //reqRegister 返回的 是一個promise obj，要用then 才能得到回傳的結果\r\n        // const response = reqRegister(user).then(response => {\r\n        //     const result = response.data;\r\n        // });\r\n\r\n        //可以修改成await 會自動時做then 可以直接拿到後端回傳結果\r\n        const response = await reqRegister(user);\r\n        const result = response.data;\r\n        console.log(result);\r\n        //後台回傳的訊息 { code:0 , msg: \"註冊成功\" , data: { username: \"austin\", gender: \"男\", memberid: 1, isRegist: true } }\r\n        if (result.code === SUCCESS_CODE) {\r\n            //成功\r\n            //設置Cookie\r\n            Cookies.set(\"userid\", result.data.memberID, { expires: 7 });\r\n            //分發(dispatch) 成功的action\r\n            dispatch(authSucess(result.data));\r\n        } else {\r\n            //失敗\r\n            //分發(dispatch) 失敗的action\r\n            dispatch(errorMsg(result.msg));\r\n        }\r\n    }\r\n}\r\n\r\nexport const login = (user) => {\r\n\r\n    const { username, password } = user;\r\n    //前端驗證輸入資料是否正確\r\n    if (!username) {\r\n        return errorMsg(\"用戶名不得為空\")\r\n    } else if (!password) {\r\n        //異步的才需要dispatch\r\n        return errorMsg(\"密碼不得為空\")\r\n    }\r\n\r\n    return async (dispatch) => {\r\n        const response = await reqLogin(user);\r\n        const result = response.data;\r\n        if (result.code === SUCCESS_CODE) {\r\n            //成功\r\n            console.log(result);\r\n            //設置Cookie\r\n            const userid = Cookies.get(\"userid\");\r\n            if (!userid) {\r\n                Cookies.set(\"userid\", result.data.memberID, { expires: 7 });\r\n            }\r\n            //分發(dispatch) 成功的action\r\n            dispatch(authSucess(result.data));\r\n        } else {\r\n            //失敗\r\n            //分發(dispatch) 失敗的action\r\n            dispatch(errorMsg(result.msg));\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => {\r\n\r\n    //返回一個函數\r\n    return async (dispatch) => {\r\n        const response = await reqUpdateUser(user);\r\n        const reult = response.data;\r\n        if (reult.code === SUCCESS_CODE) {//更新成功: data\r\n            dispatch(recieveUser(reult.data));\r\n        } else {//更新失敗: msg\r\n            dispatch(resetUser(reult.msg));\r\n        }\r\n    }\r\n}\r\n\r\n//獲取用戶列表\r\nexport const getUser = () => {\r\n\r\n    //異步ajax\r\n    return async (dispatch) => {\r\n        const response = await reqUser();\r\n        const result = response.data;\r\n        //後端回傳訊息成功\r\n        if (result.code === SUCCESS_CODE) {\r\n            dispatch(recieveUsers(result.data));\r\n        }\r\n    }\r\n}\r\n\r\n//獲取朋友列表\r\nexport const getFrined = () => {\r\n\r\n    //異步ajax\r\n    return async (dispatch) => {\r\n        const response = await reqFriend();\r\n        const result = response.data;\r\n        //後端回傳訊息成功\r\n        if (result.code === SUCCESS_CODE) {\r\n            dispatch(recieveUsers(result.data));\r\n        }\r\n    }\r\n}\r\n\r\n//加好友\r\nexport const addFriend = (user) => {\r\n\r\n    //異步ajax\r\n    return async (dispatch) => {\r\n        const response = await reqAddFriend(user);\r\n        const result = response.data;\r\n        console.log(result.msg);\r\n        //後端回傳訊息成功\r\n        if (result.code === SUCCESS_CODE) {\r\n            dispatch(recieveUsers(result.data));\r\n        }\r\n    }\r\n}\r\n\r\n//刪除好友\r\nexport const delFriend = (user) => {\r\n    console.log(\"要刪除的資料\", user);\r\n    //const {memberid,friendid}=user;\r\n\r\n\r\n    //異步ajax\r\n    return async (dispatch) => {\r\n        const response = await reqDeleteFriend(user);\r\n        const result = response.data;\r\n        console.log(result.msg);\r\n        //後端回傳訊息成功\r\n        if (result.code === SUCCESS_CODE) {\r\n            dispatch(recieveUsers(result.data));\r\n        }\r\n    }\r\n}\r\n\r\n//獲取個人信息\r\nexport const getPersonal = ({ memberid }) => {\r\n    console.log(\"跑getPersonal\");\r\n    return async (dispatch) => {\r\n        const response = await reqPersonal({ memberid });\r\n        const result = response.data;\r\n        //後端回傳訊息成功\r\n        if (result.code === SUCCESS_CODE) {\r\n            console.log(result.data)\r\n            dispatch(recieveUser(result.data));\r\n        } else {\r\n            dispatch(resetUser(result.msg));\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n//獲取興趣、偏好類型\r\nexport const getSelectOption = () => {\r\n    return async (dispatch) => {\r\n        const response = await reqSelectOption();\r\n        const result = response.data;\r\n        if (result.code === SUCCESS_CODE) {\r\n            console.log(result.data)\r\n            dispatch(recieveOptions(result.data));\r\n        } else {\r\n            dispatch(resetUser(result.msg));\r\n        }\r\n    }\r\n}\r\n\r\n//獲取用戶信息\r\nexport const getUserDetail = ({ memberid, username }) => {\r\n    console.log(\"跑getUserDetail\");\r\n    return async (dispatch) => {\r\n        const response = await reqUserDetail({ memberid, username });\r\n        const result = response.data;\r\n        //後端回傳訊息成功\r\n        if (result.code === SUCCESS_CODE) {\r\n            console.log(result.data)\r\n            dispatch(recieveUser(result.data));\r\n        } else {\r\n            dispatch(resetUser(result.msg));\r\n        }\r\n\r\n    }\r\n}\r\n\r\n//登出\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        Cookies.remove(\"userid\");\r\n        console.log(\"清除cookie\");\r\n        dispatch(resetUser(\"登出成功\"));\r\n    }\r\n\r\n}\r\n\r\n\r\n//chathub連線\r\nexport const connectToHub = (memberid) => {\r\n    //創建一個實例\r\n    // const HubConnection = new HubConnectionBuilder()\r\n    //     .withUrl(`${process.env.REACT_APP_URL}/chathub`).withAutomaticReconnect().build();\r\n\r\n    // const hub =HubConnection;\r\n    return async (dispatch) => {\r\n        //連線\r\n        const result = await connectHub(memberid);\r\n\r\n        console.log(\"連線結果\", result);\r\n        // HubConnection.invoke(\"AddConnectList\", memberid, \"\")\r\n        //     .catch(err => console.log(err));\r\n\r\n        if(result.hub){\r\n            dispatch(recieveConnectHub(result.hub));\r\n        }else{\r\n\r\n        }\r\n\r\n        \r\n        \r\n        \r\n    }\r\n}\r\n\r\n//獲取訊息\r\nexport const getMsg =({memberid,recieveid})=>{\r\n    return async (dispatch)=>{\r\n        const response = await reqMessage({memberid,recieveid});\r\n        const result= response.data;\r\n        //後端回傳訊息成功\r\n        if (result.code === SUCCESS_CODE) {\r\n            console.log(result.data)\r\n            dispatch(recieveMsg(result.data));\r\n        } else {\r\n            console.log(\"不明原因失敗\",result.data)\r\n        }\r\n        \r\n    }\r\n}","C:\\Users\\USER\\React\\social-media-client\\src\\redux\\store.js",[],["60","61"],"C:\\Users\\USER\\React\\social-media-client\\src\\redux\\reducers.js",[],"C:\\Users\\USER\\React\\social-media-client\\src\\containers\\chat\\chat.jsx",["62","63"],"C:\\Users\\USER\\React\\social-media-client\\src\\index.js",[],["64","65"],"C:\\Users\\USER\\React\\social-media-client\\src\\containers\\memberlist\\member-list.jsx",[],"C:\\Users\\USER\\React\\social-media-client\\src\\containers\\message\\message.jsx",["66"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport man from '../../assets/man.png';\r\nimport woman from '../../assets/woman2.png';\r\nimport '../personal/personal.scss';\r\n\r\nclass Message extends Component {\r\n\r\n\r\n    goToChat = ()=>{\r\n        this.props.history.push(`/chat/${1}`)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mybody\">\r\n                <div className=\"outborder topborder\">\r\n                    <div className=\"container mt-3\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"card col-7 my-2\" onClick={this.goToChat}>\r\n                                <div className=\"mt-2\">\r\n\r\n                                    <div className=\"headerdp\">\r\n                                        <img className=\"mx-3 headphoto\" src={woman} style={{ \"width\": 50 }} alt=\"\" />\r\n                                        台北張阿姨\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"card-body\">                               \r\n                                    <div className=\"card-text\">\r\n                                        今晚...我想來點麥當勞的薯條配可樂\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card col-7 my-2\">\r\n                                <div className=\"mt-2\">\r\n\r\n                                    <div className=\"headerdp\">\r\n                                        <img className=\"mx-3 headphoto\" src={woman} style={{ \"width\": 50 }} alt=\"\" />\r\n                                        香港趙阿姨\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"card-body\">                               \r\n                                    <div className=\"card-text\">\r\n                                        小鮮肉，今晚來找我嗎?\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card col-7 my-2\">\r\n                                <div className=\"mt-2\">\r\n\r\n                                    <div className=\"headerdp\">\r\n                                        <img className=\"mx-3 headphoto\" src={woman} style={{ \"width\": 50 }} alt=\"\" />\r\n                                        內湖潘阿姨\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"card-body\">                               \r\n                                    <div className=\"card-text\">\r\n                                        今晚來陪我，就算你PS5\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    \r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({ user: state.user }),\r\n    {}\r\n)(Message);","C:\\Users\\USER\\React\\social-media-client\\src\\containers\\friends\\friends.jsx",[],["67","68"],"C:\\Users\\USER\\React\\social-media-client\\src\\components\\friend-list\\friend-list.jsx",[],"C:\\Users\\USER\\React\\social-media-client\\src\\api\\hubHelper.js",["69"],"C:\\Users\\USER\\React\\social-media-client\\src\\api\\index.js",[],"C:\\Users\\USER\\React\\social-media-client\\src\\redux\\action-types.js",[],"C:\\Users\\USER\\React\\social-media-client\\src\\utils\\index.js",[],{"ruleId":"70","severity":1,"message":"71","line":9,"column":10,"nodeType":"72","messageId":"73","endLine":9,"endColumn":30},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"70","severity":1,"message":"71","line":3,"column":10,"nodeType":"72","messageId":"73","endLine":3,"endColumn":30},{"ruleId":"70","severity":1,"message":"78","line":147,"column":19,"nodeType":"72","messageId":"73","endLine":147,"endColumn":27},{"ruleId":"74","replacedBy":"79"},{"ruleId":"76","replacedBy":"80"},{"ruleId":"70","severity":1,"message":"81","line":4,"column":8,"nodeType":"72","messageId":"73","endLine":4,"endColumn":11},{"ruleId":"74","replacedBy":"82"},{"ruleId":"76","replacedBy":"83"},{"ruleId":"70","severity":1,"message":"84","line":9,"column":9,"nodeType":"72","messageId":"73","endLine":9,"endColumn":15},"no-unused-vars","'HubConnectionBuilder' is defined but never used.","Identifier","unusedVar","no-native-reassign",["85"],"no-negated-in-lhs",["86"],"'memberid' is assigned a value but never used.",["85"],["86"],"'man' is defined but never used.",["85"],["86"],"'result' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]